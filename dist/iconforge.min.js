(()=>{const e="https://cdn.jsdelivr.net/gh/DanKaufmanDev/IconForge@e2ad39d/dist/",t="IconForge",o=`${e}/iconforge.woff2`,n=`${e}/meta/iconforge-icons.json`,a=`${e}/meta/iconforge-styles.json`,r=new Set,s=new Set,c=new Set,i=document.createElement("style");document.head.appendChild(i);let d={},l={};const f={loadStart:performance.now(),fontLoaded:!1,metaLoaded:!1,errors:0},m=e=>{if(e.nodeType!==Node.ELEMENT_NODE)return;const t=e=>{const t=e.className;"string"==typeof t&&t.split(" ").forEach(e=>{e.startsWith("if-")?r.add(e):e.startsWith("is-")&&s.add(e)})};t(e);const o=document.createTreeWalker(e,NodeFilter.SHOW_ELEMENT,{acceptNode:e=>e.className&&(e.className.includes("if-")||e.className.includes("is-"))?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_SKIP});for(;o.nextNode();)t(o.currentNode)},h=()=>{let e="",t="";r.forEach(e=>{!c.has(e)&&d[e]&&(t+=d[e]+"\n",c.add(e))}),s.forEach(o=>{if(!c.has(o)&&l[o]){const n=l[o];"object"==typeof n&&n.class?(n.keyframes&&(c.has(n.keyframes)||(e+=n.keyframes+"\n",c.add(n.keyframes))),t+=n.class+"\n"):"string"==typeof n&&(t+=n+"\n"),c.add(o)}});const o=e+t;o&&requestAnimationFrame(()=>{let e=document.querySelector(".iconforge-dynamic");e||(e=document.createElement("style"),e.classList.add("iconforge-dynamic"),i.after(e)),e.textContent+=o})},u=async()=>{let e;await(async()=>{try{const e=sessionStorage.getItem("iconforge_icons"),t=sessionStorage.getItem("iconforge_styles");if(e&&t)return d=JSON.parse(e),void(l=JSON.parse(t));const o=performance.now(),[r,s]=await Promise.all([y(n,{priority:"high"}),y(a,{priority:"high"})]);f.metaLoaded=!0,f.metaLoadTime=performance.now()-o,g("iconforge_icons",r),g("iconforge_styles",s),d=r,l=s}catch(e){f.errors++,console.warn("IconForge: Failed to load meta data, falling back to defaults",e),d={},l={}}})(),m(document.documentElement),h();new MutationObserver(t=>{clearTimeout(e),e=setTimeout(()=>{t.forEach(e=>{"childList"===e.type?e.addedNodes.forEach(m):"attributes"===e.type&&"class"===e.attributeName&&m(e.target)}),h()},16)}).observe(document.documentElement,{childList:!0,subtree:!0,attributes:!0,attributeFilter:["class"]})},y=async(e,t,o=3)=>{for(let n=0;n<o;n++)try{const o=await fetch(e,t);if(!o.ok)throw new Error(`HTTP ${o.status}`);return o.json()}catch(e){if(n===o-1)throw e;await new Promise(e=>setTimeout(e,1e3*Math.pow(2,n)))}},g=(e,t)=>{try{const o=JSON.stringify(t);return!(o.length>2097152)&&(sessionStorage.setItem(e,o),!0)}catch(e){return!1}};(()=>{const e=document.createElement("link");e.rel="preload",e.href=o,e.as="font",e.type="font/woff2",e.crossOrigin="anonymous",document.head.appendChild(e)})(),(()=>{const e=`/* Injected by IconForge */\n@font-face { font-family: '${t}'; src: url('${o}') format('woff2'); font-display: block; font-weight: normal; font-style: normal; }`;i.textContent=e})(),(()=>{const e=`[class^="if-"], [class*=" if-"] { font-family: '${t}' !important; display: inline-block; font-style: normal; font-weight: normal; font-variant: normal; text-transform: none; line-height: 1; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; }`;i.textContent+=e})(),(()=>{const t=document.createElement("link");t.rel="preconnect",t.href=new URL(e).origin,t.crossOrigin="anonymous",document.head.appendChild(t)})(),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",u):u()})();